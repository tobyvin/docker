version: "3.3"

services:
  traefik:
    image: traefik
    container_name: traefik
    env_file: .env
    command:
      - --api=true
      - --api.dashboard=true
      ## providers
      - --providers.docker
      - --providers.docker.network=proxy
      - --providers.docker.exposedbydefault=false
      - --providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.$DOMAIN`)
      - --providers.file.directory=/etc/traefik
      ## entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.middlewares=secured@docker
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      ## certificatesresolvers
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=$EMAIL
      - --certificatesresolvers.letsencrypt.acme.storage=/data/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      ## debug
      # - --log.level=DEBUG
      # - --api.insecure=true
      # - --certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config:/etc/traefik
      - nfs:/data
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    depends_on:
      - auth
    labels:
      ## traefik WebUI
      - traefik.enable=true
      - traefik.http.routers.api.service=api@internal
      # - traefik.http.routers.api.entrypoints=websecure

  auth:
    image: thomseddon/traefik-forward-auth:2.2.0-arm
    container_name: auth
    command:
      - --log-level=warn
      - --log-format=text
      - --auth-host=auth.$DOMAIN
      - --cookie-domain=$DOMAIN
      - --default-action=auth
      - --default-provider=google
      - --url-path=/_oauth
      - --whitelist=$EMAIL,$WHITELIST
      ## CORS/OPTIONS
      - --rule.allow-cors.rule=allow
      - --rule.allow-cors.rule=Method(`OPTIONS`)
      ## foundry
      - --rule.foundry.action=allow
      - --rule.foundry.rule=Host(`foundry.$DOMAIN`)
      ## heimdall
      - --rule.personal.action=allow
      - --rule.personal.rule=Host(`heimdall.$DOMAIN`)
    secrets:
      - source: auth
        target: /auth
    environment:
      - CONFIG=/auth
    expose:
      - 4181
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.auth.entrypoints=websecure
      - traefik.http.services.auth.loadbalancer.server.port=4181
      ## middlewares
      - traefik.http.routers.auth.middlewares=secured@docker
      - traefik.http.middlewares.secured.chain.middlewares=auth
      - traefik.http.middlewares.rate-limit.rateLimit.average=100
      - traefik.http.middlewares.rate-limit.rateLimit.burst=50
      - traefik.http.middlewares.auth.forwardauth.address=http://auth:4181
      - traefik.http.middlewares.auth.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.auth.forwardauth.authResponseHeaders=X-Forwarded-User
    # Logout: https://auth.tobyvin.com/_oauth/logout

  whoami:
    image: traefik/whoami
    container_name: whoami
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.entrypoints=websecure

secrets:
  auth:
    file: secrets/auth

volumes:
  nfs:
    driver: local
    driver_opts:
      type: "nfs"
      o: addr=bifrost,nolock,soft,rw
      device: ":/mnt/share/docker/traefik"

networks:
  default:
    driver: overlay
    external:
      name: proxy
